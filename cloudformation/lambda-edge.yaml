---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Request URI Rewriting'

Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: 'Lambda@Edge request URI rewriting'
      Code:
        ZipFile: |
          'use strict';
          exports.handler = (event, context, callback) => {
              var request = event.Records[0].cf.request;
              var olduri = request.uri;
              var newuri = olduri.replace(/\/$/, '\/index.html');
              request.uri = newuri;
              return callback(null, request);
          };
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt LambdaFunctionExecutionRole.Arn
      Runtime: nodejs16.x

  LambdaFunctionVersion:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref LambdaFunction
      Description: 'URI rewriting with Lambda@Edge'

  LambdaFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - edgelambda.amazonaws.com
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

Outputs:
  StackName:
    Description: 'Stack name'
    Value: !Sub '${AWS::StackName}'

  LambdaFunctionId:
    Description: 'Lambda function ID'
    Value: !Ref LambdaFunction
    Export:
      Name: !Sub '${AWS::StackName}-role-arn'

  LambdaFunctionArn:
    Description: 'Lumda function ARN'
    Value: !GetAtt LambdaFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-function-arn'

  LambdaFunctionVersionArn:
    Description: 'Lambda function version ARN'
    Value: !Ref LambdaFunctionVersion
    Export:
      Name: !Sub '${AWS::StackName}-function-version'
